name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    runs-on: ubuntu-latest
    environment: dvp

    defaults:
      run:
        shell: bash
        working-directory: "./01-infra/azure"

    steps:
    - uses: hashicorp/setup-terraform@v3
    - uses: actions/checkout@v4

    - name: 'Terraform Format'
      id: fmt
      run: terraform fmt -check -recursive -list=true
      continue-on-error: true  
        
    - name: 'Terraform Init'
      id : init
      run : terraform init -input=false

    - name: 'Terraform Validate'
      id : validate
      run : terraform validate

    #- name: 'Terraform Plan'
    #  id : plan
    #  run : terraform plan -detailed-exitcode -var-file="variables/dvp.tfvars"
    #  env:
    #    TF_VAR_sql_admin_password : ${{ secrets.VAR_SQL_ADMIN_PASSWORD }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      id : apply
      run : terraform apply -auto-approve -var-file="variables/dvp.tfvars"
      env:
        TF_VAR_sql_admin_password : ${{ secrets.VAR_SQL_ADMIN_PASSWORD }}

    - name: Terraform Output
      id : output
      run : | 
        terraform_outputs=$(terraform output -json)

        for key in $(echo $terraform_outputs | jq -r 'keys[]'); do
        value=$(echo $terraform_outputs | jq -r ".\"$key\".value")
        echo "$key=$value" >> $GITHUB_ENV
        done

    - name: 'Deploy ADF'
      env: 
       adf_root: "./adf"
       rg_name:  ${{ env.rgname }}
       data_factory_name: ${{ env.datafactoryname }}
       rg_location: ${{ env.rglocation }}
      run: pwsh deploy_adf.ps1
      working-directory: ./01-infra/devops/adf

  #datafactory:
  #  name: 'Azure data factory'
  #  env:
  #    ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  #    ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  #    ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #    ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
#
  #  runs-on: ubuntu-latest
  #  environment: dvp
#
  #  defaults:
  #    run:
  #      shell: pwsh
#
  #  steps:
  #  - uses: actions/checkout@v4
  #  - uses: hashicorp/setup-terraform@v3
#
  #  - name: Terraform State
  #    id : state
  #    run : terraform state list
#
  #  - name: Terraform Output
  #    id : output
  #    run : terraform output
#
  #  - name: 'Deploy ADF'
  #    env: 
  #     adf_root: "./adf"
  #     rg_name: $(terraform output -raw rg_name)
  #     data_factory_name: $(terraform output -raw data_factory_name)
  #     rg_location: $(terraform output -raw rg_location)
  #    run: ./01-infra/devops/adf/deploy_adf.ps1



