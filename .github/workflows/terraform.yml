name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    runs-on: ubuntu-latest
    environment: dvp

    defaults:
      run:
        shell: bash
        working-directory: "./01-infra/azure"

    steps:
    - uses: hashicorp/setup-terraform@v3
    - uses: actions/checkout@v4

    - name: 'Terraform Format'
      id: fmt
      run: terraform fmt -check -recursive -list=true
      continue-on-error: true  
        
    - name: 'Terraform Init'
      id : init
      run : terraform init -input=false

    - name: 'Terraform Validate'
      id : validate
      run : terraform validate

    - name: 'Terraform Plan'
      id : plan
      run : terraform plan -detailed-exitcode
      with:
        args: '-var-file="variables/dvp.tfvars' 
      env:
        TF_VAR_sql_admin_password : ${{ secrets.VAR_SQL_ADMIN_PASSWORD }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      id : apply
      run : terraform apply
      with:
        args: '-var-file="variables/dvp.tfvars'
      env:
        TF_VAR_sql_admin_password : ${{ secrets.VAR_SQL_ADMIN_PASSWORD }}

    #- name: 'Terraform Output'
    #  id: terraform
    #  with:
    #    tf_actions_version: 0.14.8
    #    tf_actions_subcommand: 'output'
    #    tf_actions_working_dir: './01-infra/azure'
    #- name: 'Use Terraform Output'
    #  run: echo ${{ steps.terraform.outputs.tf_actions_output  }}

    #- name: 'Deploy ADF'
    #  shell: pwsh
    #  env: 
    #    adf_root: "./adf"
    #    rg_name: $(echo ${{ steps.terraform.outputs.tf_actions_output }} | jq -r '.rg_name.value.name')
    #    data_factory_name: $(echo ${{ steps.terraform.outputs.tf_actions_output }} | jq -r '.data_factory_name.value.name')
    #    rg_location: $(echo ${{ steps.terraform.outputs.tf_actions_output }} | jq -r '.rg_location.value.name')
    #  run: .\01-infra\devops\adf\deploy_adf.ps1


    #- name: Terraform Apply
    #  if: github.ref == 'refs/heads/prod'
    #  uses: hashicorp/terraform-github-actions@master
    #  with:
    #    tf_actions_version: 0.14.8
    #    tf_actions_subcommand: 'apply'
    #    tf_actions_working_dir: "./01-infra/azure"
    #    args: '-var-file="variables/prd.tfvars'
    #  env:
    #    TF_VAR_sql_admin_password : ${{ secrets.VAR_SQL_ADMIN_PASSWORD }}

