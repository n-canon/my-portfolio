name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    runs-on: ubuntu-latest
    environment: dvp

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: "./01-infra/azure"
      env:
        TF_CLI_ARGS: '-check=true -list=true'   
        
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./01-infra/azure"
        args: '-var-file="variables/dvp.tfvars'

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./01-infra/azure"

    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./01-infra/azure"
        args: '-var-file="variables/dvp.tfvars' 
      env:
        TF_VAR_sql_admin_password : ${{ secrets.VAR_SQL_ADMIN_PASSWORD }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./01-infra/azure"
        args: '-var-file="variables/dvp.tfvars'
      env:
        TF_VAR_sql_admin_password : ${{ secrets.VAR_SQL_ADMIN_PASSWORD }}

  adf:
    name: 'Azure Data factory'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    runs-on: ubuntu-latest
    environment: dvp

    defaults:
      run:
        shell: pwsh

      steps:
        - uses: actions/checkout@v2
        - name: 'Deploy ADF'
          shell: pwsh
          env: 
            adf_root: "./adf"
            rg_name: $(terraform output rgname) 
            data_factory_name: $(terraform output adfname) 
            rg_location: $(terraform output rglocation) 
          run: ./devops/adf/deploy_adf.ps1


    #- name: Terraform Apply
    #  if: github.ref == 'refs/heads/prod'
    #  uses: hashicorp/terraform-github-actions@master
    #  with:
    #    tf_actions_version: 0.14.8
    #    tf_actions_subcommand: 'apply'
    #    tf_actions_working_dir: "./01-infra/azure"
    #    args: '-var-file="variables/prd.tfvars'
    #  env:
    #    TF_VAR_sql_admin_password : ${{ secrets.VAR_SQL_ADMIN_PASSWORD }}

